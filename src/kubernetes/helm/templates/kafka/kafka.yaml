{{- if .Values.kafka.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: {{ .Values.global.namespace }}
  labels:
    app: zookeeper
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  ports:
  - port: 2181
    name: client
  - port: 2888
    name: server
  - port: 3888
    name: leader-election
  selector:
    app: zookeeper
---
{{- if .Values.zookeeper.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: zookeeper-data
  namespace: {{ .Values.global.namespace }}
  labels:
    app: zookeeper
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - {{ .Values.zookeeper.persistence.accessMode }}
  resources:
    requests:
      storage: {{ .Values.zookeeper.persistence.size }}
{{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  namespace: {{ .Values.global.namespace }}
  labels:
    app: zookeeper
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  serviceName: zookeeper
  replicas: {{ .Values.zookeeper.replicas }}
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: {{ .Values.zookeeper.image.repository }}:{{ .Values.zookeeper.image.tag }}
        imagePullPolicy: {{ .Values.zookeeper.image.pullPolicy }}
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        resources:
          {{- toYaml .Values.zookeeper.resources | nindent 10 }}
        env:
        - name: ZOOKEEPER_CLIENT_PORT
          value: "2181"
        - name: ZOOKEEPER_TICK_TIME
          value: "2000"
        volumeMounts:
        - name: zookeeper-data
          mountPath: /var/lib/zookeeper/data
        readinessProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 30
          periodSeconds: 15
      {{- if .Values.zookeeper.persistence.enabled }}
      volumes:
      - name: zookeeper-data
        persistentVolumeClaim:
          claimName: zookeeper-data
      {{- else }}
      volumes:
      - name: zookeeper-data
        emptyDir: {}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: {{ .Values.global.namespace }}
  labels:
    app: kafka
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  ports:
  - port: 9092
    name: kafka
  selector:
    app: kafka
---
{{- if .Values.kafka.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-data
  namespace: {{ .Values.global.namespace }}
  labels:
    app: kafka
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  accessModes:
    - {{ .Values.kafka.persistence.accessMode }}
  resources:
    requests:
      storage: {{ .Values.kafka.persistence.size }}
{{- end }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: {{ .Values.global.namespace }}
  labels:
    app: kafka
    app.kubernetes.io/name: {{ include "cinemaabyss.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  serviceName: kafka
  replicas: {{ .Values.kafka.replicas }}
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: {{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag }}
        imagePullPolicy: {{ .Values.kafka.image.pullPolicy }}
        ports:
        - containerPort: 9092
          name: kafka
        resources:
          {{- toYaml .Values.kafka.resources | nindent 10 }}
        env:
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://kafka:9092
        - name: KAFKA_LISTENERS
          value: PLAINTEXT://0.0.0.0:9092
        - name: KAFKA_PORT
          value: "9092"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zookeeper:2181
        - name: KAFKA_CREATE_TOPICS
          value: "{{ range $i, $topic := .Values.kafka.topics }}{{ if $i }},{{ end }}{{ $topic.name }}:{{ $topic.partitions }}:{{ $topic.replicationFactor }}{{ end }}"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_LOG_DIRS
          value: "/kafka/kafka-logs"
        volumeMounts:
        - name: kafka-data
          mountPath: /kafka
        readinessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 60
          periodSeconds: 20
      {{- if .Values.kafka.persistence.enabled }}
      volumes:
      - name: kafka-data
        persistentVolumeClaim:
          claimName: kafka-data
      {{- else }}
      volumes:
      - name: kafka-data
        emptyDir: {}
      {{- end }}
{{- end }}